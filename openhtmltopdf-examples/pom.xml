<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.openhtmltopdf</groupId>
    <artifactId>openhtmltopdf-parent</artifactId>
    <version>1.0.11-SNAPSHOT</version>
  </parent>

  <artifactId>openhtmltopdf-examples</artifactId>

  <packaging>jar</packaging>

  <name>Openhtmltopdf Examples</name>
  <description>Misc. Open HTML to PDF example code.  It is not deployed with a release.</description>

  <licenses>
    <license>
      <name>GNU Lesser General Public License (LGPL), version 2.1 or later</name>
      <url>http://www.gnu.org/licenses/lgpl.html</url>
    </license>
  </licenses>

  <properties>
    <jmh.version>1.25.2</jmh.version>
    <uberjar.name>benchmarks</uberjar.name>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.openhtmltopdf</groupId>
      <artifactId>openhtmltopdf-core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.openhtmltopdf</groupId>
      <artifactId>openhtmltopdf-pdfbox</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.openhtmltopdf</groupId>
      <artifactId>openhtmltopdf-rtl-support</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.openhtmltopdf</groupId>
      <artifactId>openhtmltopdf-svg-support</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <!-- Rhino is included here just to make sure SVG
           scripts are NOT executed when there is a script engine available.
           Rhino is only an optional dependency for Batik so we have
           to include it explicitly.
      -->
      <groupId>org.mozilla</groupId>
      <artifactId>rhino</artifactId>
      <version>${open.rhino.version}</version>
    </dependency>
    <dependency>
      <groupId>com.openhtmltopdf</groupId>
      <artifactId>openhtmltopdf-mathml-support</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.openhtmltopdf</groupId>
      <artifactId>openhtmltopdf-java2d</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.openhtmltopdf</groupId>
      <artifactId>openhtmltopdf-objects</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.openhtmltopdf</groupId>
      <artifactId>openhtmltopdf-latex-support</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jfree</groupId>
      <artifactId>jfreechart</artifactId>
      <version>1.5.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.zxing</groupId>
      <artifactId>javase</artifactId>
      <version>3.4.0</version>
    </dependency>
    <dependency>
      <groupId>org.freemarker</groupId>
      <artifactId>freemarker</artifactId>
      <version>2.3.27-incubating</version>
      <type>jar</type>
      <scope>compile</scope>
    </dependency>

    <dependency>
        <groupId>org.jsoup</groupId>
        <artifactId>jsoup</artifactId>
        <version>1.15.3</version>
    </dependency>

    <!-- JMH Benchmarks -->
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-core</artifactId>
      <version>${jmh.version}</version>
    </dependency>
    <dependency>
      <groupId>org.openjdk.jmh</groupId>
      <artifactId>jmh-generator-annprocess</artifactId>
      <version>${jmh.version}</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${open.junit4.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <use>false</use>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <configuration>
          <mainClass>com.openhtmltopdf.testcases.TestcaseRunner</mainClass>
          <systemProperties>
            <systemProperty>
              <key>OUT_DIRECTORY</key>
              <value>target/examples</value>
            </systemProperty>
          </systemProperties>
        </configuration>
      </plugin>
      <!-- workaround for: 'java.lang.IllegalStateException: endPosTable already set'.
           see: https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8067747
           Thrown while compiling JMH classes
           -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <!-- Create an all-in JAR for running JMH benchmarks -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.2</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <finalName>${uberjar.name}</finalName>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>org.openjdk.jmh.Main</mainClass>
                </transformer>
              </transformers>
              <filters>
                <filter>
                  <!--
                      Shading signed JARs will fail without this.
                      http://stackoverflow.com/questions/999489/invalid-signature-file-when-attempting-to-run-a-jar
                  -->
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                  </excludes>
                </filter>
              </filters>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
      </resource>
      <resource>
        <directory>../</directory>
        <targetPath>META-INF</targetPath>
        <includes>
          <include>LICENSE*</include>
        </includes>
      </resource>
	</resources>
  </build>
</project>
